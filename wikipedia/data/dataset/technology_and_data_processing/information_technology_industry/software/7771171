The Java language has undergone several changes since JDK 1.0 as well as numerous additions of classes and packages to the standard library. Since J2SE 1.4, the evolution of the Java language has been governed by the Java Community Process (JCP), which uses Java Specification Requests (JSRs) to propose and specify additions and changes to the Java platform. The language is specified by the Java Language Specification (JLS); changes to the JLS are managed under JSR 901.
In addition to the language changes, much more dramatic changes have been made to the Java Class Library over the years, which has grown from a few hundred classes in JDK 1.0 to over three thousand in J2SE 5. Entire new APIs, such as Swing and Java2D, have been introduced, and many of the original JDK 1.0 classes and methods have been deprecated. Some programs allow conversion of Java programs from one version of the Java platform to an older one (for example Java 5.0 backported to 1.4) (see Java backporting tools).
In September 2017, Mark Reinhold, chief Architect of the Java Platform, proposed to change the release train to "one feature release every six months" rather than the current two-year schedule.
Java 9 is the main publicly supported version (with Java 7 no longer publicly supported and Java 8 end of support announced), while after public support periods of older versions has ended, non-public updates have been issued for Java 7 and earlier.
While Java was originally made for e.g. client-side applet use in web browsers (usage shifted mostly to the backend), major browsers no longer have applet support (nor is that use case officially supported by Oracle; neither do they or Apple support Java for macOS; outdated Windows XP is also no longer officially supported, and Microsoft in general hindered use of unchanged Java with their Windows operating system, for a time competing with a J# language).
