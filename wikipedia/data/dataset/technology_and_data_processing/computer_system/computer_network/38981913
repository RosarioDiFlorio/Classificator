can4linux is an Open Source CAN Linux-Kernel device driver. Development started in the mid 1990s for the Philips 82C200 CAN controller stand alone chip on a ISA Board AT-CAN-MINI. In 1995 the first version was created to use the CAN bus with Linux for laboratory automation as a project of the Linux Lab Project at FU Berlin.
The increasing spread of the CAN field bus technology for automation especially in embedded devices and the growth of Linux in this area leads to a growing importance of device drivers as base for higher layer CAN protocols like CANopen, J1939 and DeviceNet.
Besides the NXP SJA1000 as successor of the first supported CAN controller Philips 82C200 and the Intel 82527, the development for powerful microcontrollers with integrated CAN controllers that are capable to run the Linux Operating system have been intensified since 2005. As examples for this development serve Freescale's ColdFire processors  or ARM models by ATMEL and Freescale but also the stand-alone CAN controller MCP2515, connected via SPI Bus.
A list of supported CAN controllers is available on the can4linux project site.
In the latest version there is a virtual CAN mode implemented which allows applications to communicate without CAN hardware but only by using the device driver software layer. This mode already includes support for the new CAN frame format called CAN FD  which allows data frame length up to 64 byte.


